  task_sensor.c (task_sensor.h, task_sensor_attribute.h) 
   Non-Blocking & Update By Time Code -> Sensor Modeling
  
 task_sensor.c
 
 Macros y constantes:
 
 1) G_TASK_SEN_CNT_INIT, G_TASK_SEN_TICK_CNT_INI.
 
 2) Delays para lógica antirrebote (DEL_BTN_XX_MIN, DEL_BTN_XX_MED, DEL_BTN_XX_MAX)
 
 3) Tamaños configurables (SENSOR_CFG_QTY, SENSOR_DTA_QTY) 
 
 Arreglos de estructuras:
 
 1) Se define una lista de estructuras task_sensor_cfg_list[] tal que cada estructura será
 representativa de cada entrada (botón) que podramos tener a disposición en un futuro.
 Cada elemento de esos structs serán relativos a lo que hace cada una de esas entradas (Señales,
 eventos, pines, etc).
 
 2) task_sensor_dta_list[] define el estado inicial de cada boton.
 
 Variables globales
 
 1) g_task_sensor_cnt -> Contador de ejecuciones de la tarea
 
 2) volatile uint32_t g_task_sensor_tick_cnt -> Señal de tiempo consumida por task_sensor_update
 
 Funciones
 
 1) task_sensor_init(void*) -> Inicializa contadores y la maquina de estados de cada entrada(en este caso una sola)
 
 2) task_sensor_update(void*) -> Rutina no bloqueante que administra los ticks pendientes por tareas que se hayan atrasado
 
 3)task_sensor_statechart(void) -> Recorre toda la lógica de cada una de las posibles maquinas de estados con un switch representativo
 de cada posible estado que vaya a tomar.
 
 ---------------------------------------------------------------------------------------------------------------------------
 
 task_sensor_attribute.h
 
 Tipos de datos declarados:
 
 1) task_sensor_ev_t -> Eventos del sensor(EV_BTN_XX_UP, EV_BTN_XX_DOWN)
 
 2) task_sensor_st_t -> Estados de la máquina de estados (ST_BTN_XX_UP, ST_BTN_XX_FALLING, ST_BTN_XX_DOWN, ST_BTN_XX_RISING)
 
 3) task_sensor_id_t -> identificador para cada entrada en particular en caso de que hayan varias
 
 Estructuras declaradas:
 
 1) task_sensor_cfg_t -> Parametros configurables de cada entrada (identificador, pines, eventos a emitir, etc)
 
 2) task_sensor_dta_t -> Datos por cada entrada (contadores tipo guard, estados y eventos)